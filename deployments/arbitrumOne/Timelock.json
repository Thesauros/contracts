{
  "address": "0x0c5cEd804488E4AbdE6B809164e72cc0F91896b5",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "delay_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Timelock__ExecutionFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Timelock__Expired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Timelock__InvalidDelay",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Timelock__InvalidTimestamp",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Timelock__NotQueued",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Timelock__StillLocked",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Timelock__Unauthorized",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "txId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "signature",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Cancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newDelay",
          "type": "uint256"
        }
      ],
      "name": "DelayUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "txId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "signature",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Executed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "txId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "signature",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Queued",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "GRACE_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_DELAY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_DELAY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "signature",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "signature",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "signature",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "queue",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "queued",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_delay",
          "type": "uint256"
        }
      ],
      "name": "setDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x6937b3d129be41704f54bbf8f3875ad3be934078ded0b75f3e395c9cea4a5a09",
  "receipt": {
    "to": null,
    "from": "0xafA9ed53c33bbD8DE300481ce150dB3D35738F9D",
    "contractAddress": "0x0c5cEd804488E4AbdE6B809164e72cc0F91896b5",
    "transactionIndex": 20,
    "gasUsed": "807603",
    "logsBloom": "0x
    "blockHash": "0x3e0f2d991bb99e405b561ba6c42a836d595ca5b2f03b6e37d65d6bd92b014be2",
    "transactionHash": "0x6937b3d129be41704f54bbf8f3875ad3be934078ded0b75f3e395c9cea4a5a09",
    "logs": [
      {
        "transactionIndex": 20,
        "blockNumber": 367696353,
        "transactionHash": "0x6937b3d129be41704f54bbf8f3875ad3be934078ded0b75f3e395c9cea4a5a09",
        "address": "0x0c5cEd804488E4AbdE6B809164e72cc0F91896b5",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000afa9ed53c33bbd8de300481ce150db3d35738f9d"
        ],
        "data": "0x",
        "logIndex": 29,
        "blockHash": "0x3e0f2d991bb99e405b561ba6c42a836d595ca5b2f03b6e37d65d6bd92b014be2"
      },
      {
        "transactionIndex": 20,
        "blockNumber": 367696353,
        "transactionHash": "0x6937b3d129be41704f54bbf8f3875ad3be934078ded0b75f3e395c9cea4a5a09",
        "address": "0x0c5cEd804488E4AbdE6B809164e72cc0F91896b5",
        "topics": [
          "0x7ed9288af3fe7320be9af1fcb6714d780e3ffd1a17c1a395594978fd6741ddcb",
          "0x0000000000000000000000000000000000000000000000000000000000000708"
        ],
        "data": "0x",
        "logIndex": 30,
        "blockHash": "0x3e0f2d991bb99e405b561ba6c42a836d595ca5b2f03b6e37d65d6bd92b014be2"
      }
    ],
    "blockNumber": 367696353,
    "cumulativeGasUsed": "3777914",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xafA9ed53c33bbD8DE300481ce150dB3D35738F9D",
    1800
  ],
  "numDeployments": 1,
  "solcInputHash": "08e9f5ef185e61f929e85712217423f8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"delay_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Timelock__ExecutionFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Timelock__Expired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Timelock__InvalidDelay\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Timelock__InvalidTimestamp\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Timelock__NotQueued\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Timelock__StillLocked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Timelock__Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"txId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"signature\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Cancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newDelay\",\"type\":\"uint256\"}],\"name\":\"DelayUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"txId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"signature\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"txId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"signature\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Queued\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"GRACE_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"signature\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"signature\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"signature\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"queue\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"queued\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_delay\",\"type\":\"uint256\"}],\"name\":\"setDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"Timelock__Unauthorized()\":[{\"details\":\"Errors\"}]},\"events\":{\"Cancelled(bytes32,address,uint256,string,bytes,uint256)\":{\"details\":\"Emitted when a queued transaction is cancelled.\"},\"DelayUpdated(uint256)\":{\"details\":\"Emitted when the delay for queued transactions is updated.\"},\"Executed(bytes32,address,uint256,string,bytes,uint256)\":{\"details\":\"Emitted when a queued transaction is executed.\"},\"Queued(bytes32,address,uint256,string,bytes,uint256)\":{\"details\":\"Emitted when a transaction is queued.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"cancel(address,uint256,string,bytes,uint256)\":{\"params\":{\"data\":\"The calldata for the function called on the target address.\",\"signature\":\"The function signature of the target contract.\",\"target\":\"The address of the contract to cancel the transaction for.\",\"timestamp\":\"The time when the transaction was scheduled to be executed.\",\"value\":\"The amount of ether that was to be sent with the call.\"}},\"constructor\":{\"details\":\"Initializes the Timelock contract with the specified parameters.\",\"params\":{\"delay_\":\"The initial delay for queued transactions.\",\"owner_\":\"The address of the initial owner of the contract.\"}},\"execute(address,uint256,string,bytes,uint256)\":{\"params\":{\"data\":\"The calldata for the function called.\",\"signature\":\"The function signature of the target contract.\",\"target\":\"The address of the contract to call.\",\"timestamp\":\"The time when the transaction can be executed.\",\"value\":\"The amount of ether to send with the call.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"queue(address,uint256,string,bytes,uint256)\":{\"params\":{\"data\":\"The calldata for the function called on the target address.\",\"signature\":\"The function signature of the target contract.\",\"target\":\"The address of the contract to call.\",\"timestamp\":\"The time when the transaction can be executed.\",\"value\":\"The amount of ether to send with the call.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setDelay(uint256)\":{\"params\":{\"_delay\":\"The new delay duration in seconds.\"}},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner. Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer.\"}},\"title\":\"Timelock\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cancel(address,uint256,string,bytes,uint256)\":{\"notice\":\"Cancels a queued transaction.\"},\"execute(address,uint256,string,bytes,uint256)\":{\"notice\":\"Executes a queued transaction.\"},\"queue(address,uint256,string,bytes,uint256)\":{\"notice\":\"Queues a transaction.\"},\"setDelay(uint256)\":{\"notice\":\"Sets a new delay for queued transactions.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Timelock.sol\":\"Timelock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable2Step.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (access/Ownable2Step.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Ownable} from \\\"./Ownable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * This extension of the {Ownable} contract includes a two-step mechanism to transfer\\n * ownership, where the new owner must call {acceptOwnership} in order to replace the\\n * old one. This can help prevent common mistakes, such as transfers of ownership to\\n * incorrect accounts, or to contracts that are unable to interact with the\\n * permission system.\\n *\\n * The initial owner is specified at deployment time in the constructor for `Ownable`. This\\n * can later be changed with {transferOwnership} and {acceptOwnership}.\\n *\\n * This module is used through inheritance. It will make available all functions\\n * from parent (Ownable).\\n */\\nabstract contract Ownable2Step is Ownable {\\n    address private _pendingOwner;\\n\\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Returns the address of the pending owner.\\n     */\\n    function pendingOwner() public view virtual returns (address) {\\n        return _pendingOwner;\\n    }\\n\\n    /**\\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\\n     * Can only be called by the current owner.\\n     *\\n     * Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer.\\n     */\\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\\n        _pendingOwner = newOwner;\\n        emit OwnershipTransferStarted(owner(), newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual override {\\n        delete _pendingOwner;\\n        super._transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev The new owner accepts the ownership transfer.\\n     */\\n    function acceptOwnership() public virtual {\\n        address sender = _msgSender();\\n        if (pendingOwner() != sender) {\\n            revert OwnableUnauthorizedAccount(sender);\\n        }\\n        _transferOwnership(sender);\\n    }\\n}\\n\",\"keccak256\":\"0xdcad8898fda432696597752e8ec361b87d85c82cb258115427af006dacf7128c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/Timelock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.23;\\n\\nimport {Ownable2Step, Ownable} from \\\"@openzeppelin/contracts/access/Ownable2Step.sol\\\";\\n\\n/**\\n * @title Timelock\\n */\\ncontract Timelock is Ownable2Step {\\n    /**\\n     * @dev Errors\\n     */\\n    error Timelock__Unauthorized();\\n    error Timelock__InvalidDelay();\\n    error Timelock__InvalidTimestamp();\\n    error Timelock__NotQueued();\\n    error Timelock__StillLocked();\\n    error Timelock__Expired();\\n    error Timelock__ExecutionFailed();\\n\\n    // Transaction ids => queued\\n    mapping(bytes32 => bool) public queued;\\n\\n    uint256 public constant MIN_DELAY = 30 minutes;\\n    uint256 public constant MAX_DELAY = 30 days;\\n    uint256 public constant GRACE_PERIOD = 14 days;\\n\\n    uint256 public delay;\\n\\n    /**\\n     * @dev Emitted when the delay for queued transactions is updated.\\n     */\\n    event DelayUpdated(uint256 indexed newDelay);\\n\\n    /**\\n     * @dev Emitted when a transaction is queued.\\n     */\\n    event Queued(\\n        bytes32 indexed txId,\\n        address indexed target,\\n        uint256 value,\\n        string signature,\\n        bytes data,\\n        uint256 timestamp\\n    );\\n\\n    /**\\n     * @dev Emitted when a queued transaction is executed.\\n     */\\n    event Executed(\\n        bytes32 indexed txId,\\n        address indexed target,\\n        uint256 value,\\n        string signature,\\n        bytes data,\\n        uint256 timestamp\\n    );\\n\\n    /**\\n     * @dev Emitted when a queued transaction is cancelled.\\n     */\\n    event Cancelled(\\n        bytes32 indexed txId,\\n        address indexed target,\\n        uint256 value,\\n        string signature,\\n        bytes data,\\n        uint256 timestamp\\n    );\\n\\n    /**\\n     * @dev Reverts if called by any account other than the contract itself.\\n     */\\n    modifier onlySelf() {\\n        if (msg.sender != address(this)) {\\n            revert Timelock__Unauthorized();\\n        }\\n        _;\\n    }\\n\\n    /**\\n     * @dev Initializes the Timelock contract with the specified parameters.\\n     * @param owner_ The address of the initial owner of the contract.\\n     * @param delay_ The initial delay for queued transactions.\\n     */\\n    constructor(address owner_, uint256 delay_) Ownable(owner_) {\\n        _setDelay(delay_);\\n    }\\n\\n    receive() external payable {}\\n\\n    fallback() external payable {}\\n\\n    /**\\n     * @notice Queues a transaction.\\n     * @param target The address of the contract to call.\\n     * @param value The amount of ether to send with the call.\\n     * @param signature The function signature of the target contract.\\n     * @param data The calldata for the function called on the target address.\\n     * @param timestamp The time when the transaction can be executed.\\n     */\\n    function queue(\\n        address target,\\n        uint256 value,\\n        string memory signature,\\n        bytes memory data,\\n        uint256 timestamp\\n    ) public onlyOwner returns (bytes32) {\\n        if (timestamp < block.timestamp + delay) {\\n            revert Timelock__InvalidTimestamp();\\n        }\\n\\n        bytes32 txId = keccak256(\\n            abi.encode(target, value, signature, data, timestamp)\\n        );\\n        queued[txId] = true;\\n\\n        emit Queued(txId, target, value, signature, data, timestamp);\\n        return txId;\\n    }\\n\\n    /**\\n     * @notice Cancels a queued transaction.\\n     * @param target The address of the contract to cancel the transaction for.\\n     * @param value The amount of ether that was to be sent with the call.\\n     * @param signature The function signature of the target contract.\\n     * @param data The calldata for the function called on the target address.\\n     * @param timestamp The time when the transaction was scheduled to be executed.\\n     */\\n    function cancel(\\n        address target,\\n        uint256 value,\\n        string memory signature,\\n        bytes memory data,\\n        uint256 timestamp\\n    ) public onlyOwner {\\n        bytes32 txId = keccak256(\\n            abi.encode(target, value, signature, data, timestamp)\\n        );\\n        queued[txId] = false;\\n\\n        emit Cancelled(txId, target, value, signature, data, timestamp);\\n    }\\n\\n    /**\\n     * @notice Executes a queued transaction.\\n     * @param target The address of the contract to call.\\n     * @param value The amount of ether to send with the call.\\n     * @param signature The function signature of the target contract.\\n     * @param data The calldata for the function called.\\n     * @param timestamp The time when the transaction can be executed.\\n     */\\n    function execute(\\n        address target,\\n        uint256 value,\\n        string memory signature,\\n        bytes memory data,\\n        uint256 timestamp\\n    ) public payable onlyOwner returns (bytes memory) {\\n        bytes32 txId = keccak256(\\n            abi.encode(target, value, signature, data, timestamp)\\n        );\\n\\n        if (!queued[txId]) {\\n            revert Timelock__NotQueued();\\n        }\\n        if (block.timestamp < timestamp) {\\n            revert Timelock__StillLocked();\\n        }\\n        if (block.timestamp > timestamp + GRACE_PERIOD) {\\n            revert Timelock__Expired();\\n        }\\n\\n        queued[txId] = false;\\n\\n        bytes memory callData;\\n\\n        if (bytes(signature).length == 0) {\\n            callData = data;\\n        } else {\\n            callData = abi.encodePacked(\\n                bytes4(keccak256(bytes(signature))),\\n                data\\n            );\\n        }\\n        (bool success, bytes memory returnData) = target.call{value: value}(\\n            callData\\n        );\\n        if (!success) {\\n            revert Timelock__ExecutionFailed();\\n        }\\n\\n        emit Executed(txId, target, value, signature, data, timestamp);\\n\\n        return returnData;\\n    }\\n\\n    /**\\n     * @notice Sets a new delay for queued transactions.\\n     * @param _delay The new delay duration in seconds.\\n     */\\n    function setDelay(uint256 _delay) public onlySelf {\\n        _setDelay(_delay);\\n    }\\n\\n    /**\\n     * @dev Internal function to set the delay.\\n     * @param _delay The new delay duration in seconds.\\n     */\\n    function _setDelay(uint256 _delay) internal {\\n        if (_delay < MIN_DELAY || _delay > MAX_DELAY) {\\n            revert Timelock__InvalidDelay();\\n        }\\n\\n        delay = _delay;\\n        emit DelayUpdated(_delay);\\n    }\\n}\\n\",\"keccak256\":\"0xe63d823f1a67a5f54e34a8306291f7884b87ccd9ba5dfbb05dd9ce8af8ae1055\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610c94380380610c9483398101604081905261002f91610147565b816001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61006781610078565b5061007181610094565b5050610181565b600180546001600160a01b0319169055610091816100f7565b50565b6107088110806100a6575062278d0081115b156100c457604051633c6f231b60e11b815260040160405180910390fd5b600381905560405181907f7ed9288af3fe7320be9af1fcb6714d780e3ffd1a17c1a395594978fd6741ddcb90600090a250565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806040838503121561015a57600080fd5b82516001600160a01b038116811461017157600080fd5b6020939093015192949293505050565b610b04806101906000396000f3fe6080604052600436106100ae5760003560e01c8063228250c9146100b75780634125ff90146100fc5780634b9915a5146101215780634cdbfad6146101415780636a42b8f814610161578063715018a61461017757806379ba50971461018c5780638da5cb5b146101a15780639f81aed7146101c3578063b0f8b142146101d9578063c1a287e2146101f9578063e177246e14610210578063e30c397814610230578063f2fde38b1461024557005b366100b557005b005b3480156100c357600080fd5b506100e76100d23660046107c8565b60026020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b34801561010857600080fd5b5061011362278d0081565b6040519081526020016100f3565b34801561012d57600080fd5b5061011361013c366004610888565b610265565b34801561014d57600080fd5b506100b561015c366004610888565b61033b565b34801561016d57600080fd5b5061011360035481565b34801561018357600080fd5b506100b56103dd565b34801561019857600080fd5b506100b56103f1565b3480156101ad57600080fd5b506101b6610439565b6040516100f39190610938565b3480156101cf57600080fd5b5061011361070881565b6101ec6101e7366004610888565b610448565b6040516100f3919061099c565b34801561020557600080fd5b506101136212750081565b34801561021c57600080fd5b506100b561022b3660046107c8565b61062c565b34801561023c57600080fd5b506101b6610655565b34801561025157600080fd5b506100b56102603660046109b6565b610664565b600061026f6106ca565b60035461027c90426109d1565b82101561029c57604051632da71e1160e11b815260040160405180910390fd5b600086868686866040516020016102b79594939291906109f8565b60408051601f19818403018152828252805160209182012060008181526002909252919020805460ff1916600117905591506001600160a01b0388169082907fe6078611738a572e481d24f65dac585d324038a1b65b3ac7e16ad2975278a86b90610329908a908a908a908a90610a44565b60405180910390a39695505050505050565b6103436106ca565b6000858585858560405160200161035e9594939291906109f8565b60408051601f19818403018152828252805160209182012060008181526002909252919020805460ff1916905591506001600160a01b0387169082907f147c9d8001e3b0105fed2cf093029b86ccdc816c1beb9ba2746376c92f9c0796906103cd908990899089908990610a44565b60405180910390a3505050505050565b6103e56106ca565b6103ef60006106fc565b565b33806103fb610655565b6001600160a01b03161461042d578060405163118cdaa760e01b81526004016104249190610938565b60405180910390fd5b610436816106fc565b50565b6000546001600160a01b031690565b60606104526106ca565b6000868686868660405160200161046d9594939291906109f8565b60408051601f1981840301815291815281516020928301206000818152600290935291205490915060ff166104b557604051632f3585d560e11b815260040160405180910390fd5b824210156104d657604051630899d2f160e21b815260040160405180910390fd5b6104e362127500846109d1565b421115610503576040516305183ff160e51b815260040160405180910390fd5b6000818152600260205260408120805460ff1916905585516060910361052a575083610556565b858051906020012085604051602001610544929190610a81565b60405160208183030381529060405290505b600080896001600160a01b031689846040516105729190610ab2565b60006040518083038185875af1925050503d80600081146105af576040519150601f19603f3d011682016040523d82523d6000602084013e6105b4565b606091505b5091509150816105d7576040516333fb06c160e21b815260040160405180910390fd5b896001600160a01b0316847f4d89696b1438d0f9c59a98b32692918d0505bb64c719b1f94f306b6333d7c77b8b8b8b8b6040516106179493929190610a44565b60405180910390a39998505050505050505050565b33301461064c57604051637e6ae3c160e11b815260040160405180910390fd5b61043681610715565b6001546001600160a01b031690565b61066c6106ca565b600180546001600160a01b0319166001600160a01b038316908117909155610692610439565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b336106d3610439565b6001600160a01b0316146103ef573360405163118cdaa760e01b81526004016104249190610938565b600180546001600160a01b031916905561043681610778565b610708811080610727575062278d0081115b1561074557604051633c6f231b60e11b815260040160405180910390fd5b600381905560405181907f7ed9288af3fe7320be9af1fcb6714d780e3ffd1a17c1a395594978fd6741ddcb90600090a250565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156107da57600080fd5b5035919050565b80356001600160a01b03811681146107f857600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60006001600160401b038084111561082d5761082d6107fd565b604051601f8501601f19908116603f01168101908282118183101715610855576108556107fd565b8160405280935085815286868601111561086e57600080fd5b858560208301376000602087830101525050509392505050565b600080600080600060a086880312156108a057600080fd5b6108a9866107e1565b94506020860135935060408601356001600160401b03808211156108cc57600080fd5b818801915088601f8301126108e057600080fd5b6108ef89833560208501610813565b9450606088013591508082111561090557600080fd5b508601601f8101881361091757600080fd5b61092688823560208401610813565b95989497509295608001359392505050565b6001600160a01b0391909116815260200190565b60005b8381101561096757818101518382015260200161094f565b50506000910152565b6000815180845261098881602086016020860161094c565b601f01601f19169290920160200192915050565b6020815260006109af6020830184610970565b9392505050565b6000602082840312156109c857600080fd5b6109af826107e1565b808201808211156109f257634e487b7160e01b600052601160045260246000fd5b92915050565b60018060a01b038616815284602082015260a060408201526000610a1f60a0830186610970565b8281036060840152610a318186610970565b9150508260808301529695505050505050565b848152608060208201526000610a5d6080830186610970565b8281036040840152610a6f8186610970565b91505082606083015295945050505050565b6001600160e01b0319831681528151600090610aa481600485016020870161094c565b919091016004019392505050565b60008251610ac481846020870161094c565b919091019291505056fea2646970667358221220d7f6d7f10462ec1147f4c4d9665aefdba5cf1f6864ea6703b329fad97ec4a24864736f6c63430008170033",
  "deployedBytecode": "0x6080604052600436106100ae5760003560e01c8063228250c9146100b75780634125ff90146100fc5780634b9915a5146101215780634cdbfad6146101415780636a42b8f814610161578063715018a61461017757806379ba50971461018c5780638da5cb5b146101a15780639f81aed7146101c3578063b0f8b142146101d9578063c1a287e2146101f9578063e177246e14610210578063e30c397814610230578063f2fde38b1461024557005b366100b557005b005b3480156100c357600080fd5b506100e76100d23660046107c8565b60026020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b34801561010857600080fd5b5061011362278d0081565b6040519081526020016100f3565b34801561012d57600080fd5b5061011361013c366004610888565b610265565b34801561014d57600080fd5b506100b561015c366004610888565b61033b565b34801561016d57600080fd5b5061011360035481565b34801561018357600080fd5b506100b56103dd565b34801561019857600080fd5b506100b56103f1565b3480156101ad57600080fd5b506101b6610439565b6040516100f39190610938565b3480156101cf57600080fd5b5061011361070881565b6101ec6101e7366004610888565b610448565b6040516100f3919061099c565b34801561020557600080fd5b506101136212750081565b34801561021c57600080fd5b506100b561022b3660046107c8565b61062c565b34801561023c57600080fd5b506101b6610655565b34801561025157600080fd5b506100b56102603660046109b6565b610664565b600061026f6106ca565b60035461027c90426109d1565b82101561029c57604051632da71e1160e11b815260040160405180910390fd5b600086868686866040516020016102b79594939291906109f8565b60408051601f19818403018152828252805160209182012060008181526002909252919020805460ff1916600117905591506001600160a01b0388169082907fe6078611738a572e481d24f65dac585d324038a1b65b3ac7e16ad2975278a86b90610329908a908a908a908a90610a44565b60405180910390a39695505050505050565b6103436106ca565b6000858585858560405160200161035e9594939291906109f8565b60408051601f19818403018152828252805160209182012060008181526002909252919020805460ff1916905591506001600160a01b0387169082907f147c9d8001e3b0105fed2cf093029b86ccdc816c1beb9ba2746376c92f9c0796906103cd908990899089908990610a44565b60405180910390a3505050505050565b6103e56106ca565b6103ef60006106fc565b565b33806103fb610655565b6001600160a01b03161461042d578060405163118cdaa760e01b81526004016104249190610938565b60405180910390fd5b610436816106fc565b50565b6000546001600160a01b031690565b60606104526106ca565b6000868686868660405160200161046d9594939291906109f8565b60408051601f1981840301815291815281516020928301206000818152600290935291205490915060ff166104b557604051632f3585d560e11b815260040160405180910390fd5b824210156104d657604051630899d2f160e21b815260040160405180910390fd5b6104e362127500846109d1565b421115610503576040516305183ff160e51b815260040160405180910390fd5b6000818152600260205260408120805460ff1916905585516060910361052a575083610556565b858051906020012085604051602001610544929190610a81565b60405160208183030381529060405290505b600080896001600160a01b031689846040516105729190610ab2565b60006040518083038185875af1925050503d80600081146105af576040519150601f19603f3d011682016040523d82523d6000602084013e6105b4565b606091505b5091509150816105d7576040516333fb06c160e21b815260040160405180910390fd5b896001600160a01b0316847f4d89696b1438d0f9c59a98b32692918d0505bb64c719b1f94f306b6333d7c77b8b8b8b8b6040516106179493929190610a44565b60405180910390a39998505050505050505050565b33301461064c57604051637e6ae3c160e11b815260040160405180910390fd5b61043681610715565b6001546001600160a01b031690565b61066c6106ca565b600180546001600160a01b0319166001600160a01b038316908117909155610692610439565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b336106d3610439565b6001600160a01b0316146103ef573360405163118cdaa760e01b81526004016104249190610938565b600180546001600160a01b031916905561043681610778565b610708811080610727575062278d0081115b1561074557604051633c6f231b60e11b815260040160405180910390fd5b600381905560405181907f7ed9288af3fe7320be9af1fcb6714d780e3ffd1a17c1a395594978fd6741ddcb90600090a250565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156107da57600080fd5b5035919050565b80356001600160a01b03811681146107f857600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60006001600160401b038084111561082d5761082d6107fd565b604051601f8501601f19908116603f01168101908282118183101715610855576108556107fd565b8160405280935085815286868601111561086e57600080fd5b858560208301376000602087830101525050509392505050565b600080600080600060a086880312156108a057600080fd5b6108a9866107e1565b94506020860135935060408601356001600160401b03808211156108cc57600080fd5b818801915088601f8301126108e057600080fd5b6108ef89833560208501610813565b9450606088013591508082111561090557600080fd5b508601601f8101881361091757600080fd5b61092688823560208401610813565b95989497509295608001359392505050565b6001600160a01b0391909116815260200190565b60005b8381101561096757818101518382015260200161094f565b50506000910152565b6000815180845261098881602086016020860161094c565b601f01601f19169290920160200192915050565b6020815260006109af6020830184610970565b9392505050565b6000602082840312156109c857600080fd5b6109af826107e1565b808201808211156109f257634e487b7160e01b600052601160045260246000fd5b92915050565b60018060a01b038616815284602082015260a060408201526000610a1f60a0830186610970565b8281036060840152610a318186610970565b9150508260808301529695505050505050565b848152608060208201526000610a5d6080830186610970565b8281036040840152610a6f8186610970565b91505082606083015295945050505050565b6001600160e01b0319831681528151600090610aa481600485016020870161094c565b919091016004019392505050565b60008251610ac481846020870161094c565b919091019291505056fea2646970667358221220d7f6d7f10462ec1147f4c4d9665aefdba5cf1f6864ea6703b329fad97ec4a24864736f6c63430008170033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ],
      "Timelock__Unauthorized()": [
        {
          "details": "Errors"
        }
      ]
    },
    "events": {
      "Cancelled(bytes32,address,uint256,string,bytes,uint256)": {
        "details": "Emitted when a queued transaction is cancelled."
      },
      "DelayUpdated(uint256)": {
        "details": "Emitted when the delay for queued transactions is updated."
      },
      "Executed(bytes32,address,uint256,string,bytes,uint256)": {
        "details": "Emitted when a queued transaction is executed."
      },
      "Queued(bytes32,address,uint256,string,bytes,uint256)": {
        "details": "Emitted when a transaction is queued."
      }
    },
    "kind": "dev",
    "methods": {
      "acceptOwnership()": {
        "details": "The new owner accepts the ownership transfer."
      },
      "cancel(address,uint256,string,bytes,uint256)": {
        "params": {
          "data": "The calldata for the function called on the target address.",
          "signature": "The function signature of the target contract.",
          "target": "The address of the contract to cancel the transaction for.",
          "timestamp": "The time when the transaction was scheduled to be executed.",
          "value": "The amount of ether that was to be sent with the call."
        }
      },
      "constructor": {
        "details": "Initializes the Timelock contract with the specified parameters.",
        "params": {
          "delay_": "The initial delay for queued transactions.",
          "owner_": "The address of the initial owner of the contract."
        }
      },
      "execute(address,uint256,string,bytes,uint256)": {
        "params": {
          "data": "The calldata for the function called.",
          "signature": "The function signature of the target contract.",
          "target": "The address of the contract to call.",
          "timestamp": "The time when the transaction can be executed.",
          "value": "The amount of ether to send with the call."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pendingOwner()": {
        "details": "Returns the address of the pending owner."
      },
      "queue(address,uint256,string,bytes,uint256)": {
        "params": {
          "data": "The calldata for the function called on the target address.",
          "signature": "The function signature of the target contract.",
          "target": "The address of the contract to call.",
          "timestamp": "The time when the transaction can be executed.",
          "value": "The amount of ether to send with the call."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "setDelay(uint256)": {
        "params": {
          "_delay": "The new delay duration in seconds."
        }
      },
      "transferOwnership(address)": {
        "details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner. Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer."
      }
    },
    "title": "Timelock",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "cancel(address,uint256,string,bytes,uint256)": {
        "notice": "Cancels a queued transaction."
      },
      "execute(address,uint256,string,bytes,uint256)": {
        "notice": "Executes a queued transaction."
      },
      "queue(address,uint256,string,bytes,uint256)": {
        "notice": "Queues a transaction."
      },
      "setDelay(uint256)": {
        "notice": "Sets a new delay for queued transactions."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/Timelock.sol:Timelock",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 156,
        "contract": "contracts/Timelock.sol:Timelock",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 9064,
        "contract": "contracts/Timelock.sol:Timelock",
        "label": "queued",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_bytes32,t_bool)"
      },
      {
        "astId": 9075,
        "contract": "contracts/Timelock.sol:Timelock",
        "label": "delay",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}